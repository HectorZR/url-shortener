services:
  app:
    container_name: url-shortener-app
    restart: unless-stopped
    build:
      context: .
      target: ${ENV}
    depends_on:
      - db
    volumes:
      - .:/app
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      ENV: ${ENV}
      PORT: ${PORT}
      HOST: ${HOST}
      GOOGLE_CREDENTIALS_JSON: ${GOOGLE_CREDENTIALS_JSON}
    develop:
      watch:
        - action: sync
          path: .
          target: /code
    networks:
      - proxy
      - default
    labels:
      - "traefik.http.routers.url-shortener.rule=Host(`shortener.${HOST}`)"
      - "traefik.http.services.url-shortener.loadbalancer.server.port=${PORT}"

  db:
    image: postgres:16.9
    restart: always
    container_name: url-shortener-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - url-shortener-data:/var/lib/postgresql/data
    networks:
      - default

  traefik:
    image: traefik:v3.4
    restart: unless-stopped
    networks:
      - proxy
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/certs:ro
      - ./dynamic:/dynamic:ro
      - ./letsencrypt:/letsencrypt
    command:
      # EntryPoints
      - "--entrypoints.web.address=:80"

      # Providers
      - "--providers.docker=true"
      - "--providers.docker.network=proxy"

      # API & Dashboard
      - "--api.dashboard=true"
      - "--api.insecure=true"

      # Observability
      - "--log.level=INFO"
      - "--accesslog=true"

    # Traefik Dynamic configuration via Docker labels
    labels:
      # Enable selfâ€‘routing
      - "traefik.enable=true"

volumes:
  url-shortener-data:
    driver: local

networks:
  proxy:
    name: proxy
